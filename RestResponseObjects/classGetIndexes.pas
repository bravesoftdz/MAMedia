unit classGetIndexes;

// *************************************************
// Generated By: JsonToDelphiClass - 0.65
// Project link: https://github.com/PKGeorgiev/Delphi-JsonToDelphiClass
// Generated On: 2016-11-21 11:23:13
// *************************************************
// Created By  : Petar Georgiev - 2014
// WebSite     : http://pgeorgiev.com
// *************************************************

interface

uses Generics.Collections, Rest.Json;

type

  TArtistClass = class
  private
    FId: String;
    FName: String;
  public
    property id: String read FId write FId;
    property name: String read FName write FName;
    function ToJsonString: string;
    class function FromJsonString(AJsonString: string): TArtistClass;
  end;

  TIndexClass = class
  private
    FArtist: TArray<TArtistClass>;
    FName: String;
  public
    property artist: TArray<TArtistClass> read FArtist write FArtist;
    property name: String read FName write FName;
    destructor Destroy; override;
    function ToJsonString: string;
    class function FromJsonString(AJsonString: string): TIndexClass;
  end;

  TIndexesClass = class
  private
    FIgnoredArticles: String;
    FIndex: TArray<TIndexClass>;
    FLastModified: Extended;
  public
    property ignoredArticles: String read FIgnoredArticles
      write FIgnoredArticles;
    property index: TArray<TIndexClass> read FIndex write FIndex;
    property lastModified: Extended read FLastModified write FLastModified;
    destructor Destroy; override;
    function ToJsonString: string;
    class function FromJsonString(AJsonString: string): TIndexesClass;
    function Count: integer;
  end;

  TGetIndexesClass = class
  private
    // FMadsonicresponse: TMadsonicresponseClass;
  public
    // property madsonicresponse: TMadsonicresponseClass read FMadsonicresponse write FMadsonicresponse;
    constructor Create;
    destructor Destroy; override;
    function ToJsonString: string;
    class function FromJsonString(AJsonString: string): TGetIndexesClass;
  end;

implementation

{ TArtistClass }

function TArtistClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TArtistClass.FromJsonString(AJsonString: string): TArtistClass;
begin
  result := TJson.JsonToObject<TArtistClass>(AJsonString)
end;

{ TIndexClass }

destructor TIndexClass.Destroy;
var
  LartistItem: TArtistClass;
begin

  for LartistItem in FArtist do
    LartistItem.free;

  inherited;
end;

function TIndexClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TIndexClass.FromJsonString(AJsonString: string): TIndexClass;
begin
  result := TJson.JsonToObject<TIndexClass>(AJsonString)
end;

{ TIndexesClass }

destructor TIndexesClass.Destroy;
var
  LindexItem: TIndexClass;
begin

  for LindexItem in FIndex do
    LindexItem.free;

  inherited;
end;

function TIndexesClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TIndexesClass.FromJsonString(AJsonString: string): TIndexesClass;
begin
  result := TJson.JsonToObject<TIndexesClass>(AJsonString)
end;

function TIndexesClass.Count: integer;
begin
  result := Length(self.FIndex);
end;

{ TGetIndexesClass }

constructor TGetIndexesClass.Create;
begin
  inherited;
  // FMadsonicresponse := TMadsonicresponseClass.Create();
end;

destructor TGetIndexesClass.Destroy;
begin
  // FMadsonicresponse.free;
  inherited;
end;

function TGetIndexesClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TGetIndexesClass.FromJsonString(AJsonString: string)
  : TGetIndexesClass;
begin
  result := TJson.JsonToObject<TGetIndexesClass>(AJsonString)
end;

end.
